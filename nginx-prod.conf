worker_processes auto;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    map_hash_max_size 512;
    map_hash_bucket_size 512;
    map $request_uri $new_uri {
        include redirections.conf;
    }

    server_tokens off;
    server {

        listen 8080;
        server_name default_server;
        port_in_redirect off;

        #remove www
        if ($host ~* '^www\.(.*)$') {
            return 301 $scheme://$1$request_uri ;
        }

        if ($new_uri) {
            return 301 https://data.norge.no$new_uri;
        }

        #remove all instances of trailing slashes
        rewrite ^/(.*)/$ /$1 permanent;

        #if the traffic comes via data.norge.no
        if ($host = 'data.norge.no') {
            set $redirected 1;
        }

        #if the traffic comes from data.transportportal.no
        if ($host = 'data.transportportal.no') {
            set $redirected 1;
        }

        proxy_http_version          1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;

        client_max_body_size 50M;

        # Compression

        # Enable Gzip compressed.
        gzip on;

        # Enable compression both for HTTP/1.0 and HTTP/1.1.
        gzip_http_version  1.1;

        # Compression level (1-9).
        # 5 is a perfect compromise between size and cpu usage, offering about
        # 75% reduction for most ascii files (almost identical to level 9).
        gzip_comp_level    5;

        # Don't compress anything that's already small and unlikely to shrink much
        # if at all (the default is 20 bytes, which is bad as that usually leads to
        # larger files after gzipping).
        gzip_min_length    256;

        # Compress data even for clients that are connecting to us via proxies,
        # identified by the "Via" header (required for CloudFront).
        gzip_proxied       any;

        # Tell proxies to cache both the gzipped and regular version of a resource
        # whenever the client's Accept-Encoding capabilities header varies;
        # Avoids the issue where a non-gzip capable client (which is extremely rare
        # today) would display gibberish if their proxy gave them the gzipped version.
        gzip_vary          on;

        # Compress all output labeled with one of the following MIME-types.
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/rss+xml
            application/x-font-ttf
            application/x-web-app-manifest+json
            application/xhtml+xml
            application/xml
            font/opentype
            image/svg+xml
            image/x-icon
            text/css
            text/plain
            text/x-component
            text/turtle;

        # Short term caching
        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 5;
        open_file_cache_errors off;

        # several our API-s determine response type by Accept header, so it must be declared as vary key for caches
        # since adding header overrides effect of "gzip_vary on", we need to add Accept-Encoding manually again
        add_header 'Vary' 'Accept, Accept-Encoding';

        location ~* ^.+/(ping|ready|health|prometheus|actuator)((/\w+)+|/?)$ {
            deny all;
            return 404;
        }

        #redirect informationmodels to information-models
        location ~* ^/informationmodels(.*) {
            return 301 /information-models$1;
        }
        location ~* ^/api/informationmodels(.*) {
            return 301 /api/information-models$1;
        }
        #redirect dataservices to data-services
        location ~* ^/dataservices(.*) {
            return 301 /data-services$1;
        }
        location ~* ^/api/dataservices(.*) {
            return 301 /api/data-services$1;
        }

        location ~* /api/apis/.+ {
            rewrite /api/apis(.*) $1 break;
            proxy_pass http://fdk-api-endpoints:8080;
        }

        location /api/apis {
            return 301 https://data.norge.no/api/data-services;
        }

        location ~* /api/concepts/.* {
            if ($http_accept ~* "application/json") {
                rewrite /api/concepts(.*) /concepts$1 break;
                proxy_pass http://fdk-nginx-harvester-bff:8080;
            }
            if ($http_accept ~* "text/html") {
                return 303 https://data.norge.no/concepts;
            }
            rewrite /api/concepts(.*) /concepts$1 break;
            proxy_pass http://fdk-concept-harvester:8080;
        }

        location /api/concepts {
            if ($http_accept ~* "text/turtle") {
                rewrite /api/concepts(.*) /collections$1 break;
                proxy_pass http://fdk-concept-harvester:8080;
            }
            if ($http_accept ~* "text/html") {
                return 303 https://data.norge.no/concepts;
            }
            if ($http_accept ~* "application/json") {
                rewrite /api/concepts(.*) /concepts$1;
                proxy_pass http://fdk-resource-service:8080;
            }
            return 303 https://concepts.fellesdatakatalog.digdir.no/collections;
        }

        location ~* /api/data-services/.* {
            if ($http_accept ~* "application/json") {
                rewrite /api/data-services(.*) /data-services$1 break;
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/html") {
                return 303 https://data.norge.no/data-services;
            }
            rewrite /api/data-services(.*) /dataservices$1 break;
            proxy_pass http://fdk-dataservice-harvester:8080;
        }

        location /api/data-services {
            rewrite /api/data-services(.*) /data-services$1;

            if ($http_accept ~* "text/turtle") {
                rewrite /data-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataservice-harvester:8080;
            }
            if ($http_accept ~* "text/html") {
                return 303 https://data.norge.no/data-services;
            }
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            return 303 https://dataservices.fellesdatakatalog.digdir.no/catalogs;
        }

        location /api/information-models {
            rewrite /api/information-models(.*) /informationmodels$1 break;
            proxy_pass http://fdk-informationmodel-harvester:8080;
        }

        location /api/public-services {
            rewrite /api/public-services(.*) /public-services$1 break;
            proxy_pass http://fdk-public-service-harvester:8080;
        }

        location /api/events {
            rewrite /api/events(.*) /events$1 break;
            proxy_pass http://fdk-event-harvester:8080;
        }

        location /api/dataset/preview {
            rewrite /dataset/preview(.*) /preview$1 break;
            proxy_pass http://fdk-dataset-preview-service:8080;
        }

        location ~* /api/datasets/.* {
            rewrite /api/datasets(.*) /datasets$1;

            if ($http_accept ~* "application/json") {
                proxy_pass  http://fdk-nginx-harvester-bff:8080;
            }
            if ($http_accept ~* "text/html") {
                return 303 https://data.norge.no/datasets;
            }

        }

        location /api/datasets {
            rewrite /api/datasets(.*) /datasets$1;

            if ($http_accept ~* "text/turtle") {
                rewrite /datasets(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataset-harvester:8080;
            }
            if ($http_accept ~* "text/html") {
                return 303 https://data.norge.no/datasets;
            }
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            return 303 https://datasets.fellesdatakatalog.digdir.no/catalogs;
        }

        location /apis {
            if ($redirected != 1) {
                rewrite /apis(.*) https://data.norge.no/data-services$1 redirect;
            }
            rewrite /apis(.*) https://data.norge.no/data-services$1 permanent;
        }

        location ~* /concepts/.+ {
#             if ($redirected != 1) {
#                 return 303 https://data.norge.no$request_uri;
#             }
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-nginx-harvester-bff:8080;
            }
            if ($http_accept ~* "text/html") {
                proxy_pass http://fdk-portal:8080;
            }

            proxy_pass  http://fdk-concept-harvester:8080;
        }

        location /concepts {
            if ($redirected != 1) {
                return 303 https://data.norge.no$request_uri;
            }
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/turtle") {
                rewrite /concepts(.*) /collections$1 break;
                proxy_pass http://fdk-concept-harvester:8080;
            }
            if ($http_accept ~* "application/ld\+json") {
                rewrite /concepts(.*) /collections$1 break;
                proxy_pass http://fdk-concept-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+xml") {
                rewrite /concepts(.*) /collections$1 break;
                proxy_pass http://fdk-concept-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+json") {
                rewrite /concepts(.*) /collections$1 break;
                proxy_pass http://fdk-concept-harvester:8080;
            }
            #portal
            proxy_pass http://fdk-portal:8080;
        }

        location ~* /data-services/.+ {
#             if ($redirected != 1) {
#                 return 303 https://data.norge.no$request_uri;
#             }
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/html") {
                proxy_pass http://fdk-portal:8080;
            }
            rewrite /data-services/(.+) /dataservices/$1 break;
            proxy_pass  http://fdk-dataservice-harvester:8080;
        }

        location /data-services {
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/turtle") {
                rewrite /data-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataservice-harvester:8080;
            }
            if ($http_accept ~* "application/ld\+json") {
                rewrite /data-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataservice-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+xml") {
                rewrite /data-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataservice-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+json") {
                rewrite /data-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataservice-harvester:8080;
            }
            #portal
            proxy_pass http://fdk-portal:8080;
        }

        location /reference-data {
             rewrite .+?(reference-data\/?)(.*) /reference-data/$2 break;
             proxy_pass http://reference-data:8080;
        }

        location /search-all {
            if ($redirected != 1) {
                return 303 https://data.norge.no$request_uri;
            }
            proxy_pass http://fdk-portal:8080;
        }

        location /datasets.rss {
            proxy_set_header Accept "application/rss+xml";
            rewrite /datasets.rss(.*) /$1 break;
            proxy_pass http://fdk-rss-atom-feed:8080;
        }

        location = /data/rss.xml {
            proxy_set_header Accept "application/rss+xml";
            rewrite /data/rss.xml(.*) /$1 break;
            proxy_pass http://fdk-rss-atom-feed:8080;
        }

        location /datasets.atom {
            proxy_set_header Accept "application/atom+xml";
            rewrite /datasets.atom(.*) /$1 break;
            proxy_pass http://fdk-rss-atom-feed:8080;
        }

        location ~* /datasets/.+ {
#             if ($redirected != 1) {
#                 return 303 https://data.norge.no$request_uri;
#             }
            if ($http_accept ~* "application/json") {
                proxy_pass  http://fdk-nginx-harvester-bff:8080;
            }
            if ($http_accept ~* "text/html") {
                proxy_pass http://fdk-portal:8080;
            }
            proxy_pass  http://fdk-dataset-harvester:8080;
        }

        location /datasets {
            if ($redirected != 1) {
                return 303 https://data.norge.no$request_uri;
            }
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/turtle") {
                rewrite /datasets(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataset-harvester:8080;
            }
            if ($http_accept ~* "application/ld\+json") {
                rewrite /datasets(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataset-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+xml") {
                rewrite /datasets(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataset-harvester:8080;
            }
            if ($http_accept ~* "application/rss\+xml") {
                rewrite /datasets(.*) /$1 break;
                proxy_pass http://fdk-rss-atom-feed:8080;
            }
            if ($http_accept ~* "application/atom\+xml") {
                rewrite /datasets(.*) /$1 break;
                proxy_pass http://fdk-rss-atom-feed:8080;
            }
            if ($http_accept ~* "application/rdf\+json") {
                rewrite /datasets(.*) /catalogs$1 break;
                proxy_pass http://fdk-dataset-harvester:8080;
            }
            #portal
            proxy_pass http://fdk-portal:8080;
        }

        location /dataset/preview {
            rewrite /dataset/preview(.*) /preview$1 break;
            proxy_pass http://fdk-dataset-preview-service:8080;
        }

        location ~* /information-models/.+ {
            if ($http_accept ~* "application/json") {
                proxy_pass  http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/html") {
                proxy_pass http://fdk-portal:8080;
            }
            rewrite /information-models/(.+) /informationmodels/$1 break;
            proxy_pass  http://fdk-informationmodel-harvester:8080;
        }

        location /information-models {
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/turtle") {
                rewrite /information-models(.*) /catalogs$1 break;
                proxy_pass http://fdk-informationmodel-harvester:8080;
            }
            if ($http_accept ~* "application/ld\+json") {
                rewrite /information-models(.*) /catalogs$1 break;
                proxy_pass http://fdk-informationmodel-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+xml") {
                rewrite /information-models(.*) /catalogs$1 break;
                proxy_pass http://fdk-informationmodel-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+json") {
                rewrite /information-models(.*) /catalogs$1 break;
                proxy_pass http://fdk-informationmodel-harvester:8080;
            }
            #portal
            proxy_pass http://fdk-portal:8080;
        }

        location ~* /public-services/.+ {
            if ($http_accept ~* "application/json") {
                proxy_pass  http://fdk-nginx-harvester-bff:8080;
            }
            if ($http_accept ~* "text/html") {
                proxy_pass http://fdk-portal:8080;
            }
            proxy_pass  http://fdk-public-service-harvester:8080;
        }

        location /public-services {
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/turtle") {
                rewrite /public-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-public-service-harvester:8080;
            }
            if ($http_accept ~* "application/ld\+json") {
                rewrite /public-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-public-service-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+xml") {
                rewrite /public-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-public-service-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+json") {
                rewrite /public-services(.*) /catalogs$1 break;
                proxy_pass http://fdk-public-service-harvester:8080;
            }
            #portal
            proxy_pass http://fdk-portal:8080;
        }

        location ~* /events/.+ {
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/html") {
                proxy_pass http://fdk-portal:8080;
            }
            proxy_pass  http://fdk-event-harvester:8080;
        }

        location /events {
            if ($http_accept ~* "application/json") {
                proxy_pass http://fdk-resource-service:8080;
            }
            if ($http_accept ~* "text/turtle") {
                rewrite /events(.*) /catalogs$1 break;
                proxy_pass http://fdk-event-harvester:8080;
            }
            if ($http_accept ~* "application/ld\+json") {
                rewrite /events(.*) /catalogs$1 break;
                proxy_pass http://fdk-event-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+xml") {
                rewrite /events(.*) /catalogs$1 break;
                proxy_pass http://fdk-event-harvester:8080;
            }
            if ($http_accept ~* "application/rdf\+json") {
                rewrite /events(.*) /catalogs$1 break;
                proxy_pass http://fdk-event-harvester:8080;
            }
            #portal
            proxy_pass http://fdk-portal:8080;
        }

        location /endpoints {
            if ($redirected != 1) {
                return 303 https://data.norge.no$request_uri;
            }
            proxy_pass http://fdk-api-endpoints:8080;
        }

        location /validator {
            if ($redirected != 1) {
                return 303 https://data.norge.no$request_uri;
            }
            proxy_pass http://dcat-ap-no-validator-gui:8080;
        }

        location = /showroom {
            return 303 https://${host}/showroom/overview;
        }

        location ~* ^/(examples|specification|vocabulary|guide|docs|licence|showroom) {
            proxy_pass http://static-rdf-nginx:8080;
        }

        location ~* /nlod/en/.+ {
            rewrite /nlod/en(.*) /licence/nlod$1 break;
            proxy_set_header Accept-language en;
            proxy_pass http://static-rdf-nginx:8080;
        }

        location /nlod/en {
            rewrite /nlod/en(.*) /licence/nlod break;
            proxy_set_header Accept-language en;
            proxy_pass http://static-rdf-nginx:8080;
        }

        location ~* /nlod/no/.+ {
            rewrite /nlod/no(.*) /licence/nlod$1 break;
            proxy_set_header Accept-language nb;
            proxy_pass http://static-rdf-nginx:8080;
        }

        location /nlod/no {
            rewrite /nlod/no(.*) /licence/nlod break;
            proxy_set_header Accept-language nb;
            proxy_pass http://static-rdf-nginx:8080;
        }

        location /nlod {
            rewrite /nlod(.*) /licence/nlod$1 break;
            proxy_set_header Accept-language nb;
            proxy_pass http://static-rdf-nginx:8080;
        }

        root /var/www/;

        error_page            502 @maintenance;
        error_page            503 @maintenance;
        location @maintenance {
           rewrite ^(.*)$     /http-error/maintenance.html break;
        }

        location /http-error/ {
          # Specifies that a given location can only be used for internal requests.
          # returns a 404 Not Found http error if accessed directly.
          internal;
        }

        # Temp redirect for QR-code on stands
        location /ettersporsel {
            return 307 https://datalandsbyen.norge.no/topic/56/tips-til-%C3%A5-ettersp%C3%B8rre-datasett-og-api-er;
        }

        location /hvamanglerqr {
            return 307 https://app.sli.do/event/j3tHyGM9Cmu8ifyCR3JfoU;
        }

        location /ready {
            return 200;
        }

        location /ping {
            return 200;
        }

        location /undefined {
            return 404;
        }

        location / {
            if ($request_method = POST) {
                proxy_pass http://static-rdf-nginx:8080;
            }
            add_header 'Access-Control-Allow-Origin' '*';
            if ($redirected != 1) {
                return 303 https://data.norge.no$request_uri;
            }
            proxy_pass http://fdk-portal:8080;
        }

    }
}
